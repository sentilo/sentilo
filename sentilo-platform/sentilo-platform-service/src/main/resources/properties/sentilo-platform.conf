#-------------------------------------------------------------------------------
# Sentilo
#  
# Original version 1.4 Copyright (C) 2013 Institut Municipal d’Informàtica, Ajuntament de Barcelona.
# Modified by Opentrends adding support for multitenant deployments and SaaS. Modifications on version 1.5 Copyright (C) 2015 Opentrends Solucions i Sistemes, S.L.
# 
#   
# This program is licensed and may be used, modified and redistributed under the
# terms  of the European Public License (EUPL), either version 1.1 or (at your 
# option) any later version as soon as they are approved by the European 
# Commission.
#   
# Alternatively, you may redistribute and/or modify this program under the terms
# of the GNU Lesser General Public License as published by the Free Software 
# Foundation; either  version 3 of the License, or (at your option) any later 
# version. 
#   
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
# CONDITIONS OF ANY KIND, either express or implied. 
#   
# See the licenses for the specific language governing permissions, limitations 
# and more details.
#   
# You should have received a copy of the EUPL1.1 and the LGPLv3 licenses along 
# with this program; if not, you may find them at: 
#   
#   https://joinup.ec.europa.eu/software/page/eupl/licence-eupl
#   http://www.gnu.org/licenses/ 
#   and 
#   https://www.gnu.org/licenses/lgpl.txt
#-------------------------------------------------------------------------------

# the port number for API incoming requests
sentilo.server.api.socket.port=8081
# maximum queue length for incoming connection indications
sentilo.server.api.socket.tcp-backlog=50
# internal socket timeout in milliseconds.
sentilo.server.api.socket.timeout-ms=5000
# size of the internal socket buffer used to buffer data  while receiving / transmitting HTTP messages (in bytes)
sentilo.server.api.socket.buffer-size=8192
# determines whether stale connection check is to be used
sentilo.server.api.socket.stale-connection-check=false
#  disable Nagle's algorithm to improve TCP/IP networks and decrease network latency and increase performance
#    See https://man7.org/linux/man-pages/man7/tcp.7.html (TCP_NODELAY)
sentilo.server.api.socket.tcp-nodelay=true
# defines content of the server header
sentilo.server.api.origin-server="sentilo-server/2.0.0"

# Properties to configure the pool of workers which handle incoming API requests.
sentilo.server.api.thread.pool.group-id=ApiRequestHandler
sentilo.server.api.thread.pool.group-name=API-Server
sentilo.server.api.thread.pool.queue-size=100
sentilo.server.api.thread.pool.keep-alive-seconds=60
sentilo.server.api.thread.pool.size.core=4
sentilo.server.api.thread.pool.size.max=10

# Properties to configure the pool of workers which handle internal subscriptions container
# sentilo.server.api.subs.container.workers.size.min=0
# sentilo.server.api.subs.container.workers.size.max=10

# Properties to configure the monitor server
sentilo.server.monitor.socket.port=7081

# Override Redis pool config
sentilo.redis.client.maxTotal=50
sentilo.redis.client.maxIdle=50
sentilo.redis.client.minIdle=50
 

# Properties to configure the anonymous access to Sentilo
## determines if anonymous access to API is enabled
sentilo.server.api.anonymous.enable=false
## Entity identifier that should be used for unauthenticated requests 
# sentilo.server.api.anonymous.entity-id=

# Determines whether incoming requests associated with unknown sensors (aka ghost sensors) should be accepted or rejected (default)
# sentilo.server.api.data.reject-unknown-sensors=true  

# Enables and configures the notification retry mechanism 
# sentilo.server.api.retry.notifications=true
# sentilo.server.api.retry.batch.worker.size=50
# sentilo.server.api.retry.workers.size=5

# Allows to send notifications from Sentilo to untrusted servers, i.e., servers with self-signed certificates or signed by unknown CAs
sentilo.server.api.subs.ssl.no-validate-certificates=false  

# Properties to configure rate limiter and maximum payload size
## determines maximum length allowed, in bytes, of the request payload. 0 means no limit
#sentilo.server.api.payload.max_length=0
## allows to set a maximum limit of incoming requests by hour. 0 means no limit
#sentilo.server.api.global_rate_limit.quota=0

# Properties to configure Redis clean data process
# determines maximum number of messages allowed in events streams
# sentilo.server.api.redis-clean-task.clean_streams.streams_max_length=10000
# how often runs job that cleans streams
# sentilo.server.api.redis-clean-task.clean_streams.job.delay=30000